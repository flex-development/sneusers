# DOCKER COMPOSE (DEVELOPMENT)
# https://docs.docker.com/compose/compose-file/compose-file-v3
# https://github.com/BretFisher/node-docker-good-defaults

version: '3.9'

services:
  api:
    container_name: api
    image: ghcr.io/${DOCKER_IMAGE}
    build:
      args:
        CLOUDSDK_CORE_PROJECT: ${CLOUDSDK_CORE_PROJECT}
        GITHUB_TOKEN: ${GITHUB_TOKEN}
        NODE_ENV: ${NODE_ENV}
        PORT: ${PORT}
      context: .
      dockerfile: ./Dockerfile
      target: runner
    depends_on: []
    environment:
      APP_ENV: ${APP_ENV}
      FORCE_COLOR: ${FORCE_COLOR}
      NEST_DEBUG: ${NEST_DEBUG}
      NODE_ENV: ${NODE_ENV}
      PORT: ${PORT}
    healthcheck:
      test: curl -f http://localhost:${PORT} || exit 1
    links: []
    ports:
      - ${PORT}:${PORT}
    pull_policy: build
    restart: unless-stopped
    volumes:
      - ./package.json:/app/${CLOUDSDK_CORE_PROJECT}/package.json
      - ./src:/app/${CLOUDSDK_CORE_PROJECT}/src
      - ./tsconfig.build.json:/app/${CLOUDSDK_CORE_PROJECT}/tsconfig.build.json
      - ./tsconfig.json:/app/${CLOUDSDK_CORE_PROJECT}/tsconfig.json
    working_dir: /app/${CLOUDSDK_CORE_PROJECT}
  proxy:
    container_name: proxy
    image: nginx:alpine-perl
    command:
      - nginx-debug
      - -g
      - daemon off;
    environment:
      CLOUDSDK_CORE_PROJECT: ${CLOUDSDK_CORE_PROJECT}
      GCE_SERVICE_ACCOUNT_FILE: ${GCE_SERVICE_ACCOUNT_FILE}
      LEGO_ACCOUNT_EMAIL: ${LEGO_ACCOUNT_EMAIL}
      LEGO_DOMAINS: ${LEGO_DOMAINS}
      LEGO_PATH: /etc/nginx/${LEGO_PATH}
      PORT: ${PORT}
      SERVER_NAME: ${SERVER_NAME}
      TLD: ${TLD}
    depends_on:
      api:
        condition: service_started
    links:
      - api:api
    ports:
      - 443:443
      - 80:80
    restart: unless-stopped
    tty: true
    volumes:
      - ./docker-entrypoint.d/lego.sh:/docker-entrypoint.d/lego.sh
      - ./scripts/lego/crontab:/etc/crontab
      - ./scripts/lego/renew.sh:/lego-renew.sh
      - ./src/nginx/general.conf:/etc/nginx/general.conf
      - ./src/nginx/mime.types:/etc/nginx/mime.types
      - ./src/nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./src/nginx/proxy.conf:/etc/nginx/proxy.conf
      - ./src/nginx/security.conf:/etc/nginx/security.conf
      - ./src/nginx/ssl-params.conf:/etc/nginx/ssl-params.conf
      - ./src/nginx/templates:/etc/nginx/templates
