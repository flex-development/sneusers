# DOCKER COMPOSE (DEVELOPMENT)
# https://doc.traefik.io/traefik/providers/docker/#provider-configuration
# https://doc.traefik.io/traefik/reference/dynamic-configuration/docker
# https://docs.docker.com/compose/compose-file/compose-file-v3
# https://github.com/BretFisher/node-docker-good-defaults

version: '3.9'

secrets:
  GCE_SERVICE_ACCOUNT:
    environment: GCE_SERVICE_ACCOUNT
  GITHUB_TOKEN:
    environment: GITHUB_TOKEN
services:
  api:
    container_name: api
    image: dev.ghcr.io/flex-development/sneusers
    build:
      args:
        NODE_ENV: development
        PORT: $PORT
      context: .
      dockerfile: ./Dockerfile
      secrets:
        - GITHUB_TOKEN
      target: development
    command: node --enable-source-maps ./dist/main.mjs
    depends_on: []
    environment:
      APP_ENV: development
      FORCE_COLOR: 3
      NEST_DEBUG: 1
      NODE_ENV: development
      PORT: $PORT
    healthcheck:
      test: curl --fail http://localhost:$PORT || exit 1
    labels:
      traefik.enable: true
      traefik.http.middlewares.gzip.compress: true
      traefik.http.middlewares.https.redirectscheme.permanent: true
      traefik.http.middlewares.https.redirectscheme.scheme: https
      traefik.http.middlewares.security.headers.browserXssFilter: true
      traefik.http.middlewares.security.headers.contentTypeNosniff: true
      traefik.http.middlewares.security.headers.frameDeny: true
      traefik.http.middlewares.security.headers.stsIncludeSubdomains: true
      traefik.http.middlewares.security.headers.stsPreload: true
      traefik.http.middlewares.security.headers.stsSeconds: 31536000
      traefik.http.routers.api.entrypoints: https
      traefik.http.routers.api.rule: Host(`$SERVER_NAME`)
    links: []
    ports:
      - $PORT:$PORT
    pull_policy: build
    restart: always
    volumes:
      - ./package.json:/app/package.json
      - ./src:/app/src
      - ./tsconfig.build.json:/app/tsconfig.build.json
      - ./tsconfig.json:/app/tsconfig.json
      - node_modules:/app/node_modules
    working_dir: /app
  traefik:
    container_name: traefik
    image: traefik:v2.9.9
    # https://doc.traefik.io/traefik/reference/static-configuration/cli
    command:
      - --api.dashboard
      - --api.debug
      - --api.insecure
      - --certificatesresolvers.gcloud.acme.caserver=$LEGO_CA_SERVER
      - --certificatesresolvers.gcloud.acme.dnschallenge
      - --certificatesresolvers.gcloud.acme.dnschallenge.provider=gcloud
      - --certificatesresolvers.gcloud.acme.dnschallenge.resolvers=8.8.8.8,8.8.4.4
      - --certificatesresolvers.gcloud.acme.email=$LEGO_ACCOUNT_EMAIL
      - --certificatesresolvers.gcloud.acme.preferredchain='ISRG Root X1'
      - --entrypoints.http.address=:80
      - --entrypoints.https.address=:443
      - --entrypoints.https.http.tls
      - --entrypoints.https.http.tls.certresolver=gcloud
      - --entrypoints.https.http.tls.domains[0].main=*.$TLD
      - --entrypoints.https.http.tls.domains[0].sans=*.dev.$TLD
      - --log.level=DEBUG
      - --ping
      - --providers.docker
      - --providers.docker.exposedByDefault=false
      - --providers.docker.swarmMode=false
      - --providers.docker.watch
    depends_on:
      api:
        condition: service_healthy
    environment:
      GCE_PROJECT: $CLOUDSDK_CORE_PROJECT
      GCE_SERVICE_ACCOUNT_FILE: /run/secrets/GCE_SERVICE_ACCOUNT
      LEGO_DISABLE_CNAME_SUPPORT: true
    healthcheck:
      test: traefik healthcheck --log.level=DEBUG --ping
    ports:
      - 443:443
      - 80:80
      - 8080:8080
    restart: unless-stopped
    secrets:
      - GCE_SERVICE_ACCOUNT
    tty: true
    volumes:
      - ./acme.json:/acme.json
      - /var/run/docker.sock:/var/run/docker.sock:ro
  whoami:
    container_name: whoami
    image: traefik/whoami
    environment:
      WHOAMI_PORT_NUMBER: $WHOAMI_PORT_NUMBER
    ports:
      - $WHOAMI_PORT_NUMBER:$WHOAMI_PORT_NUMBER
volumes:
  node_modules: {}
