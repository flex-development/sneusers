# USED FOR PRODUCTION AND STAGING ONLY.
# SEE: https://github.com/BretFisher/node-docker-good-defaults

version: '3.9'

services:
  adminer:
    container_name: adminer
    image: adminer
    depends_on:
      - postgres
    environment:
      ADMINER_DEFAULT_SERVER: ${DB_HOST}
      ADMINER_DESIGN: dracula
      ADMINER_PLUGINS:
        dump-alter dump-date dump-json edit-foreign email-table enum-option
        enum-types file-upload foreign-system table-indexes-structure
        table-structure tables-filter
    ports:
      - ${ADMINER_PORT}:8080
    restart: always
  app:
    container_name: app
    image: ghcr.io/flex-development/sneusers:${DOCKER_IMAGE_TAG}
    depends_on:
      - postgres
      - redis
    environment:
      CACHE_MAX: ${CACHE_MAX}
      CACHE_TTL: ${CACHE_TTL}
      DB_AUTO_LOAD_MODELS: ${DB_AUTO_LOAD_MODELS}
      DB_HOST: ${DB_HOST}
      DB_NAME: ${DB_NAME}
      DB_PASSWORD: ${DB_PASSWORD}
      DB_PORT: ${DB_PORT}
      DB_TIMEZONE: ${DB_TIMEZONE}
      DB_USERNAME: ${DB_USERNAME}
      DEBUG: ${DEBUG}
      DEBUG_COLORS: ${DEBUG_COLORS}
      DOPPLER_CONFIG: ${DOPPLER_CONFIG}
      DOPPLER_TOKEN: ${DOPPLER_TOKEN}
      EMAIL_CLIENT: ${EMAIL_CLIENT}
      EMAIL_HOST: ${EMAIL_HOST}
      EMAIL_PORT: ${EMAIL_PORT}
      EMAIL_SEND_AS: ${EMAIL_SEND_AS}
      EMAIL_PRIVATE_KEY: ${EMAIL_PRIVATE_KEY}
      EMAIL_USER: ${EMAIL_USER}
      GH_PAT: ${GH_PAT}
      HOST: ${HOST}
      HOSTNAME: ${HOSTNAME}
      JWT_EXP_ACCESS: ${JWT_EXP_ACCESS}
      JWT_EXP_REFRESH: ${JWT_EXP_REFRESH}
      JWT_EXP_VERIFY: ${JWT_EXP_VERIFY}
      JWT_SECRET_ACCESS: ${JWT_SECRET_ACCESS}
      JWT_SECRET_REFRESH: ${JWT_SECRET_REFRESH}
      JWT_SECRET_VERIFY: ${JWT_SECRET_VERIFY}
      NEST_DEBUG: ${NEST_DEBUG}
      NODE_ENV: ${NODE_ENV}
      NPM_TOKEN: ${NPM_TOKEN}
      PORT: ${PORT}
      REDIS_HOST: ${REDIS_HOST}
      REDIS_PORT: ${REDIS_PORT}
      THROTTLE_LIMIT: ${THROTTLE_LIMIT}
      THROTTLE_TTL: ${THROTTLE_TTL}
    links:
      - postgres:${DB_HOST}
      - redis:${REDIS_HOST}
    ports:
      - ${PORT}:${PORT}
      - 9229:9229
    restart: always
    working_dir: /opt/sneusers
  nginx:
    container_name: nginx
    image: nginx:alpine-perl
    command: ['nginx-debug', '-g', 'daemon off;']
    environment:
      ADMINER_PORT: 8080
      ADMINER_SERVER_NAME: ${ADMINER_SERVER_NAME}
      PORT: ${PORT}
      REDIS_PORT: 8081
      REDIS_SERVER_NAME: ${REDIS_SERVER_NAME}
      SERVER_NAME: ${SERVER_NAME}
    depends_on:
      - adminer
      - app
      - redis-commander
    links:
      - adminer:adminer
      - app:app
      - redis-commander:redis-commander
    ports:
      - 443:443
      - 80:80
    restart: always
    tty: true
    volumes:
      - ./nginx/ssl:/etc/nginx/ssl
      - ./nginx/templates:/etc/nginx/templates
      - ./nginx/general.conf:/etc/nginx/general.conf
      - ./nginx/mime.types:/etc/nginx/mime.types
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/proxy.conf:/etc/nginx/proxy.conf
      - ./nginx/security.conf:/etc/nginx/security.conf
      - ./nginx/ssl-params.conf:/etc/nginx/ssl-params.conf
      - ./nginx/ssl.conf:/etc/nginx/ssl.conf
      - /etc/letsencrypt/archive/${TLD}:/etc/letsencrypt/archive/${TLD}
      - /etc/letsencrypt/live/${TLD}:/etc/letsencrypt/live/${TLD}
      - /etc/letsencrypt/ssl-dhparams.pem:/etc/letsencrypt/ssl-dhparams.pem
      - /etc/nginx/conf.d:/etc/nginx/conf.d
      - /etc/nginx/logs:/etc/nginx/logs
      - /etc/nginx/run:/etc/nginx/run
  postgres:
    extends:
      file: docker-compose.yml
      service: postgres
    volumes:
      - /var/lib/postgresql/data:/var/lib/postgresql/data
  redis:
    extends:
      file: docker-compose.yml
      service: redis
  redis-commander:
    container_name: redis-commander
    image: rediscommander/redis-commander:latest
    environment:
      - REDIS_HOSTS=local:redis:${REDIS_PORT}
    depends_on:
      - redis
    ports:
      - ${REDIS_COMMANDER_PORT}:8081
    restart: always
