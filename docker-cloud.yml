# DOCKER COMPOSE (STAGING + PRODUCTION)
# https://doc.traefik.io/traefik/providers/docker/#provider-configuration
# https://doc.traefik.io/traefik/reference/dynamic-configuration/docker
# https://docs.docker.com/compose/compose-file/compose-file-v3
# https://github.com/BretFisher/node-docker-good-defaults

version: '3.9'

services:
  api:
    container_name: api
    image: ghcr.io/${CONTAINER_IMAGE}:${CONTAINER_IMAGE_TAG:-latest}
    depends_on: []
    environment:
      APP_ENV: production
      NEST_DEBUG: 1
      NODE_ENV: production
      PORT: ${PORT}
    healthcheck:
      test: curl --fail http://localhost:${PORT} || exit 1
    labels:
      traefik.enable: true
      traefik.http.middlewares.gzip.compress: true
      traefik.http.middlewares.https.redirectscheme.permanent: true
      traefik.http.middlewares.https.redirectscheme.scheme: https
      traefik.http.middlewares.security.headers.browserXssFilter: true
      traefik.http.middlewares.security.headers.contentTypeNosniff: true
      traefik.http.middlewares.security.headers.frameDeny: true
      traefik.http.middlewares.security.headers.stsIncludeSubdomains: true
      traefik.http.middlewares.security.headers.stsPreload: true
      traefik.http.middlewares.security.headers.stsSeconds: 31536000
      traefik.http.routers.api.entrypoints: https
      traefik.http.routers.api.rule: Host(`${SERVER_NAME}`)
    links: []
    pull_policy: always
    restart: always
    working_dir: /app
  traefik:
    container_name: traefik
    image: traefik:v2.9.9
    # https://doc.traefik.io/traefik/reference/static-configuration/cli
    command:
      - --api.debug
      - --certificatesresolvers.gcloud.acme.caserver=${LEGO_CA_SERVER}
      - --certificatesresolvers.gcloud.acme.dnschallenge.provider=gcloud
      - --certificatesresolvers.gcloud.acme.dnschallenge.resolvers=8.8.8.8,8.8.4.4
      - --certificatesresolvers.gcloud.acme.dnschallenge
      - --entrypoints.http.address=:80
      - --entrypoints.https.address=:443
      - --entrypoints.https.http.tls.certresolver=gcloud
      - --entrypoints.https.http.tls
      - --log.level=DEBUG
      - --ping
      - --providers.docker
      - --providers.docker.exposedByDefault=false
      - --providers.docker.watch
    depends_on:
      api:
        condition: service_healthy
    environment:
      GCE_PROJECT: ${CLOUDSDK_CORE_PROJECT}
      GCE_SERVICE_ACCOUNT: ${GCE_SERVICE_ACCOUNT}
      LEGO_ACCOUNT_EMAIL: ${LEGO_ACCOUNT_EMAIL}
    healthcheck:
      test: traefik healthcheck --log.level=DEBUG --ping
    ports:
      - 443:443
      - 80:80
    restart: always
    tty: true
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
