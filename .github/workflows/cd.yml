# Continuous Deployment
#
# References:
#
# - https://github.com/actions/github-script
# - https://github.com/andstor/file-existence-action/tree/v1.0.1
# - https://github.com/actions/checkout
# - https://github.com/actions/setup-node
# - https://github.com/CasperWA/push-protected/tree/v2.5.0
# - https://github.com/dawidd6/action-delete-branch/tree/v3.1.0

---
name: cd
on:
  pull_request:
    branches:
      - next
    types: [closed]
  workflow_dispatch:
    inputs:
      tag:
        description: release tag
        required: true
jobs:
  release-info:
    name: Get deployment details
    if: |
      github.event.inputs.tag ||
      (startsWith(github.event.pull_request.head.ref, 'release/') 
      && github.event.pull_request.merged == true)
    runs-on: ubuntu-latest
    outputs:
      tag: ${{ steps.release.outputs.tag }}
    steps:
      - id: release
        name: Get release details
        uses: actions/github-script@v6
        with:
          script: |
            let tag
             
            if (context.payload.inputs) tag = context.payload.inputs.tag
            if (context.payload.pull_request) {
              tag = context.payload.pull_request.head.ref.split('release/')[1]
            }

            const { 0: workspace_no_scope, 1: version } = tag.split('@')

            const dir = workspace_no_scope
            const workspace = `@${context.repo.owner}/${workspace_no_scope}`

            core.exportVariable('tag', tag)
            core.exportVariable('version', version)
            core.exportVariable('workspace', workspace)

            core.setOutput('tag', tag)
  update-production-branch:
    name: Update production branch
    needs: release-info
    runs-on: ubuntu-latest
    steps:
      - id: checkout
        name: Checkout branch
        uses: actions/checkout@v2
      - id: update
        name: Push to protected branch 'main'
        uses: CasperWA/push-protected@v2.5.0
        with:
          branch: main
          token: ${{ secrets.PAT_REPO_ADMIN }}
          unprotect_reviews: true
  publish-release:
    name: Publish GitHub Release
    needs: [release-info, update-production-branch]
    runs-on: ubuntu-latest
    steps:
      - id: publish
        name: Publish GitHub release
        uses: actions/github-script@v6
        env:
          tag: ${{ needs.release-info.outputs.tag }}
        with:
          script: |
            const endpoint = 'GET /repos/{owner}/{repo}/releases'
            const releases = await github.paginate(endpoint, context.repo)

            const release = releases.find(({ name }) => {
              return name.startsWith(process.env.tag)
            })

            if (release && release.draft) {
              await github.repos.updateRelease({
                ...context.repo,
                draft: false, 
                release_id: release.id, 
                tag_name: process.env.tag 
              })
            }
  delete-release-branch:
    name: Delete release branch
    needs: [release-info, publish-release]
    runs-on: ubuntu-latest
    steps:
      - id: delete
        uses: dawidd6/action-delete-branch@v3.1.0
        with:
          branches: release/
          github_token: ${{ github.token }}
          suffix: ${{ needs.release-info.outputs.tag }}
