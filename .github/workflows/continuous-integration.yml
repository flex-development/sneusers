# Continuous Integration
#
# References:
#
# - https://github.com/actions/checkout
# - https://github.com/actions/setup-node
# - https://github.com/DopplerHQ/cli-action
# - https://github.com/docker/login-action/tree/v1.10.0
# - https://github.com/docker/metadata-action/tree/v3.6.2
# - https://github.com/docker/build-push-action/tree/v2.7.0

---
name: continuous-integration
on:
  pull_request:
  push:
    branches:
      - next
      - push-action/**
  workflow_dispatch:
jobs:
  ci:
    runs-on: ubuntu-latest
    env:
      GH_PAT: ${{ secrets.PAT_GPR_ADMIN }}
      NPM_TOKEN: ${{ secrets.NPM_TOKEN_ADMIN }}
    strategy:
      matrix:
        node: [14.13.1]
    steps:
      - id: checkout
        name: Checkout branch
        uses: actions/checkout@v2
        with:
          ref: ${{ github.head_ref }}
      - id: node
        name: Setup Node ${{ matrix.node }}
        uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node }}
          scope: '@${{ github.repository_owner }}'
      - id: install-deps
        name: Install dependencies
        run: yarn --immutable
        env:
          NODE_AUTH_TOKEN: ${GH_PAT}
      - id: doppler-cli
        name: Install Doppler CLI
        uses: dopplerhq/cli-action@v1
      - id: ghcr-login
        name: Login to GitHub Container Registry
        uses: docker/login-action@v1.10.0
        with:
          password: ${{ secrets.PAT_CPR_ADMIN }}
          registry: ghcr.io
          username: ${{ github.repository_owner }}
      - id: check-format
        name: Check code formatting
        run: yarn check:format
      - id: check-style
        name: Check code style
        run: yarn check:style
      - id: test
        name: Run test suites
        run: yarn test
        env:
          DOPPLER_TOKEN: ${{ secrets.DOPPLER_TOKEN_TEST }}
      - id: build
        name: Build project
        run: doppler run --command="NODE_ENV=test yarn build"
        env:
          DOPPLER_CONFIG: ${{ secrets.DOPPLER_CONFIG }}
          DOPPLER_ENVIRONMENT: ${{ secrets.DOPPLER_ENVIRONMENT }}
          DOPPLER_PROJECT: ${{ secrets.DOPPLER_PROJECT }}
          DOPPLER_TOKEN: ${{ secrets.DOPPLER_TOKEN }}
      - id: ghcr-meta
        name: Extract container image metadata
        uses: docker/metadata-action@v3.6.2
        with:
          flavor: latest=false
          images: ghcr.io/${{ github.repository }}
          labels: |
            maintainer=unicornware
            org.opencontainers.image.title=sneusers
            org.opencontainers.image.vendor=${{ github.repository_owner }}
          tags: |
            edge
            type=edge,branch=${{ github.ref_name }}
            type=sha,prefix=,format=long
            type=sha,prefix=edge-
      - id: ghcr-build-push
        name: Build and push container image
        uses: docker/build-push-action@v2.7.0
        with:
          build-args: |
            GH_PAT=${{ secrets.PAT_CPR_ADMIN }}
            NPM_TOKEN=${{ secrets.NPM_TOKEN_ADMIN }}
          context: .
          file: ./Dockerfile
          labels: ${{ steps.ghcr-meta.outputs.labels }}
          push: true
          secrets: |
            DOPPLER_CONFIG=production
            DOPPLER_TOKEN=${{ secrets.DOPPLER_TOKEN }}
            GH_PAT=${{ secrets.PAT_CPR_ADMIN }}
            NODE_ENV=production
            NPM_TOKEN=${{ secrets.NPM_TOKEN_ADMIN }}
            PORT=8080
          tags: ${{ steps.ghcr-meta.outputs.tags }}
