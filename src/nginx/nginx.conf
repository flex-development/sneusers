# REFERENCE: https://github.com/kyhsa93/nestjs-rest-cqrs-example
# SEE: https://www.digitalocean.com/community/tools/nginx#?domains.0.server.domain=sneusers.app&domains.0.server.path=%2F&domains.0.server.redirectSubdomains=false&domains.0.https.http2=false&domains.0.https.hstsPreload=true&domains.0.https.letsEncryptEmail=sneusers%40flexdevelopment.llc&domains.0.php.php=false&domains.0.reverseProxy.reverseProxy=true&domains.0.reverseProxy.proxyPass=http%3A%2F%2Fapp%24request_uri&domains.0.routing.root=false&domains.0.logging.accessLog=true&domains.0.logging.errorLog=true&domains.0.restrict.putMethod=true&domains.0.restrict.headMethod=true&domains.0.restrict.connectMethod=true&domains.0.restrict.traceMethod=true&global.https.sslProfile=modern&global.https.ocspCloudflareType=both&global.https.ocspGoogleType=both&global.https.ocspOpenDnsType=both&global.https.letsEncryptRoot=public%2F&global.https.letsEncryptCertRoot=ssl%2Fletsencrypt%2F&global.logging.accessLog=%2Flogs%2Faccess.log%20main&global.logging.errorLog=%2Flogs%2Ferror.log%20warn&global.logging.logNotFound=true&global.logging.xForwardedFor=true&global.logging.xForwardedProto=true&global.logging.trueClientIp=true&global.nginx.nginxConfigDirectory=%2F&global.nginx.workerProcesses=1&global.nginx.user=nginx&global.docker.dockerfile=true&global.docker.dockerCompose=true

user nginx;
pid run/nginx.pid;
worker_processes auto;
worker_rlimit_nofile 65535;

# CONNECTION PARSING
events {
  multi_accept on;
  worker_connections 65535;
}

# HTTP SERVER
http {
  # BASIC SETTINGS
  charset utf-8;
  client_max_body_size 10M;
  keepalive_timeout 65;
  port_in_redirect off;
  sendfile on;
  server_tokens off;
  tcp_nodelay on;
  tcp_nopush on;
  types_hash_bucket_size 64;
  types_hash_max_size 2048;

  # LOGGING
  log_format main '$remote_user@$remote_addr [$time_local] "$request" '
  '$status $body_bytes_sent "$http_referer" '
  '"$http_user_agent" "$http_x_forwarded_for"';

  access_log logs/access.log main;
  error_log logs/error.log notice;
  log_not_found on;

  # MIME
  include mime.types;
  default_type  application/json;

  # CONNECTION HEADER FOR WEBSOCKET REVERSE PROXY
  map $http_upgrade $connection_upgrade {
    default upgrade;
    "" close;
  }

  map $remote_addr $proxy_forwarded_elem {
    # ipv4 addresses can be sent as is
    ~^[0-9.]+$ "for=$remote_addr";

    # ipv6 addresses need to be bracketed and quoted
    ~^[0-9A-Fa-f:.]+$ "for=\"[$remote_addr]\"";

    # unix domain socket names cannot be represented in rfc 7239 syntax
    default "for=unknown";
  }

  map $http_forwarded $proxy_add_forwarded {
    # if incoming forwarded header is syntactically valid, append to it
    "~^(,[ \\t]*)*([!#$%&'*+.^_`|~0-9A-Za-z-]+=([!#$%&'*+.^_`|~0-9A-Za-z-]+|\"([\\t \\x21\\x23-\\x5B\\x5D-\\x7E\\x80-\\xFF]|\\\\[\\t \\x21-\\x7E\\x80-\\xFF])*\"))?(;([!#$%&'*+.^_`|~0-9A-Za-z-]+=([!#$%&'*+.^_`|~0-9A-Za-z-]+|\"([\\t \\x21\\x23-\\x5B\\x5D-\\x7E\\x80-\\xFF]|\\\\[\\t \\x21-\\x7E\\x80-\\xFF])*\"))?)*([ \\t]*,([ \\t]*([!#$%&'*+.^_`|~0-9A-Za-z-]+=([!#$%&'*+.^_`|~0-9A-Za-z-]+|\"([\\t \\x21\\x23-\\x5B\\x5D-\\x7E\\x80-\\xFF]|\\\\[\\t \\x21-\\x7E\\x80-\\xFF])*\"))?(;([!#$%&'*+.^_`|~0-9A-Za-z-]+=([!#$%&'*+.^_`|~0-9A-Za-z-]+|\"([\\t \\x21\\x23-\\x5B\\x5D-\\x7E\\x80-\\xFF]|\\\\[\\t \\x21-\\x7E\\x80-\\xFF])*\"))?)*)?)*$" "$http_forwarded, $proxy_forwarded_elem";

    # replace header if not valid
    default "$proxy_forwarded_elem";
  }

  # VIRTUAL HOST CONFIGURATIONS
  include conf.d/*.conf;
}
